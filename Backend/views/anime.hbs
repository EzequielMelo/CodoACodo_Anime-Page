<head>
  <link rel="shortcut icon" href="../assets/letter-a-icon.png">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link rel="stylesheet" href="/stylesheets/anime.css">
  <title>Anime</title>
</head>
  
<div class="banner-container">
  <div class="banner-fondo">
    <img src="/images/{{anime.portada}}" alt="portada-anime">
  </div>
</div>

<div class="main-container">
  <div class="anime-content">
    <aside class="sidebar-content">
      <div class="anime-img">
        <img src="/images/{{anime.portada}}" alt="portada-anime">
      </div>
      <div class="button-container">
        <button class="btn btn-danger" id="add-to-favorites" data-anime-id="{{anime.id}}">
        {{#if isFavorite}}
        <i class="bi bi-heartbreak"></i>
          Quitar de favoritos
        {{else}}
        <i class="bi bi-heart"></i>
          Añadir a favoritos
        {{/if}}
        </button>
        <div class="button-vote-container">
          <button class="btn btn-primary vote-button" id="positive-vote-button" data-anime-id="{{anime.id}}" data-voto="positivo"><i class="bi bi-hand-thumbs-up"></i> Puntuar</button>
          <button class="btn btn-danger vote-button" id="negative-vote-button" data-anime-id="{{anime.id}}" data-voto="negativo"><i class="bi bi-hand-thumbs-down"></i> Puntuar</button>
        </div>
      </div>
    </aside>

    <!--descripcion/sinopsis-->
    <div class="info-container">
      <div class="info">
        <h2>{{anime.nombre}} <span>
            {{#if anime.enemision}}
            (En emisión)
            {{else}}
            (Finalizado)
            {{/if}}
          </span></h2>
        <h4>Sinopsis</h4>
        <p>
          {{anime.descripcion}}
        </p>
        <p>Información adicional:</p>
        <div class="info-anime-video">
          <div class="info-aditional">
            <ul>
              <li>Género: {{anime.generos}}</li>
              <li>Año: {{anime.anio}}</li>
              <li>Duración: {{anime.cantidad_episodios}} episodios</li>
              <li>Valoracion usuarios de Anime Project: {{porcentajeRecomendado}}</li>
            </ul>
          </div>
          <div class="video-container">
            <iframe src="{{anime.trailerprincipal}}" title="YouTube video player"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
              referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
          </div>
        </div>
      </div>

      <div class="chapters-container">
        <div class="select-field">
          <select id="season-select" class="styled-select">
            {{#each anime.temporadas}}
            <option value="{{this}}">Temporada {{this}}</option>
            {{/each}}
          </select>
        </div>

        <div class="episodes-container">
          <ol id="episode-list" style="list-style: none;">
            {{#each anime.episodios}}
            <li data-season="{{temporada}}">
              <a href="{{linkcapitulo}}">
                <img src="{{imagencapitulo}}" alt="episode image">
                <div class="episode-info">
                  <h4><span>Episodio: {{nombre}}</span></h4>
                  <p>{{descripcion}}</p>
                </div>
              </a>
              <hr>
            </li>
            {{/each}}
          </ol>
        </div>
      </div>

      <script>
  document.addEventListener('DOMContentLoaded', function () {
    const seasonSelect = document.getElementById('season-select');
    const episodeList = document.getElementById('episode-list');
    const episodes = episodeList.querySelectorAll('li');
    const favoriteButton = document.getElementById('add-to-favorites');
    const animeId = favoriteButton.dataset.animeId;

    function filterEpisodes() {
      const selectedSeason = seasonSelect.value;
      episodes.forEach(episode => {
        if (episode.dataset.season === selectedSeason) {
          episode.style.display = '';
        } else {
          episode.style.display = 'none';
        }
      });
    }

    seasonSelect.addEventListener('change', filterEpisodes);
    filterEpisodes(); // Initial filter

    favoriteButton.addEventListener('click', function () {
      const animeId = this.dataset.animeId;
      const action = favoriteButton.textContent.trim() === 'Añadir a favoritos' ? 'add' : 'remove';

      fetch(`/favorites/${action}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ anime_id: animeId })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          favoriteButton.innerHTML = action === 'add' ? '<i class="bi bi-heartbreak"></i> Quitar de favoritos' : '<i class="bi bi-heart"></i> Añadir a favoritos';
          Swal.fire({
            title: action === 'add' ? '¡Agregado!' : '¡Eliminado!',
            text: action === 'add' ? 'Anime agregado a favoritos' : 'Anime eliminado de favoritos',
            icon: 'success',
            confirmButtonText: 'OK'
          });
        } else {
          Swal.fire({
            title: 'Error',
            text: data.message,
            icon: 'error',
            confirmButtonText: 'OK'
          });
        }
      })
      .catch(error => {
        Swal.fire({
          title: 'Error',
          text: 'Ocurrió un error al procesar la solicitud',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      });
    });

    const voteButtons = document.querySelectorAll('.vote-button');

    voteButtons.forEach(button => {
      button.addEventListener('click', function () {
        const animeId = this.dataset.animeId; // Asegúrate de que sea 'data-anime-id'
        const voto = this.dataset.voto; // 'positivo' o 'negativo'

        fetch(`/votes/${animeId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ voto })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            const positiveButton = document.querySelector('.vote-button[data-voto="positivo"]');
            const negativeButton = document.querySelector('.vote-button[data-voto="negativo"]');

          if (voto === 'positivo') {
            positiveButton.classList.add('voted-positive');
            positiveButton.innerHTML = '<i class="bi bi-hand-thumbs-up"></i> Puntuado';
            negativeButton.classList.remove('voted-negative');
            negativeButton.innerHTML = '<i class="bi bi-hand-thumbs-down"></i> Puntuar';
            positiveButton.classList.add('voted-positive');
            positiveButton.classList.remove('voted-negative');
            negativeButton.classList.remove('voted-negative');
          } else {
            positiveButton.classList.remove('voted-positive');
            positiveButton.innerHTML = '<i class="bi bi-hand-thumbs-up"></i> Puntuar';
            negativeButton.classList.add('voted-negative');
            negativeButton.innerHTML = '<i class="bi bi-hand-thumbs-down"></i> Puntuado';
            negativeButton.classList.add('voted-negative');
            negativeButton.classList.remove('voted-positive');
            positiveButton.classList.remove('voted-positive');
          }

            Swal.fire({
              title: '¡Voto registrado!',
              text: data.message,
              icon: 'success',
              confirmButtonText: 'OK'
            });
          } else {
            Swal.fire({
              title: 'Error',
              text: data.message,
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        })
        .catch(error => {
          Swal.fire({
            title: 'Error',
            text: 'Ocurrió un error al registrar tu voto.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        });
      });
    });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const userVote = '{{userVote}}';
    const positiveButton = document.getElementById('positive-vote-button');
    const negativeButton = document.getElementById('negative-vote-button');

    if (userVote === 'positivo') {
      positiveButton.classList.add('voted-positive');
      positiveButton.innerHTML = '<i class="bi bi-hand-thumbs-up"></i> Puntuado';
      negativeButton.classList.remove('voted-negative');
      negativeButton.innerHTML = '<i class="bi bi-hand-thumbs-down"></i> Puntuar';
    } else if (userVote === 'negativo') {
      positiveButton.classList.remove('voted-positive');
      positiveButton.innerHTML = '<i class="bi bi-hand-thumbs-up"></i> Puntuar';
      negativeButton.classList.add('voted-negative');
      negativeButton.innerHTML = '<i class="bi bi-hand-thumbs-down"></i> Puntuado';
    }

    positiveButton.addEventListener('click', function () {
      // Tu lógica para votar positivo
    });

    negativeButton.addEventListener('click', function () {
      // Tu lógica para votar negativo
    });
  });
</script>

<!--
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const seasonSelect = document.getElementById('season-select');
      const episodeList = document.getElementById('episode-list');
      const episodes = episodeList.querySelectorAll('li');
      const favoriteButton = document.getElementById('add-to-favorites');
      const animeId = favoriteButton.dataset.animeId;

      function filterEpisodes() {
        const selectedSeason = seasonSelect.value;
        episodes.forEach(episode => {
          if (episode.dataset.season === selectedSeason) {
            episode.style.display = '';
          } else {
            episode.style.display = 'none';
          }
        });
      }

      seasonSelect.addEventListener('change', filterEpisodes);
      filterEpisodes(); // Initial filter

      favoriteButton.addEventListener('click', function () {
        const animeId = this.dataset.animeId;
        const action = favoriteButton.textContent.trim() === 'Añadir a favoritos' ? 'add' : 'remove';

        fetch(`/favorites/${action}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ anime_id: animeId })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            favoriteButton.textContent = action === 'add' ? 'Quitar de favoritos' : 'Añadir a favoritos';
            Swal.fire({
              title: action === 'add' ? '¡Agregado!' : '¡Eliminado!',
              text: action === 'add' ? 'Anime agregado a favoritos' : 'Anime eliminado de favoritos',
              icon: 'success',
              confirmButtonText: 'OK'
            });
          } else {
            Swal.fire({
              title: 'Error',
              text: data.message,
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        })
        .catch(error => {
          Swal.fire({
            title: 'Error',
            text: 'Ocurrió un error al procesar la solicitud',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        });
      });
    });
  </script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const voteButtons = document.querySelectorAll('.vote-button');

    voteButtons.forEach(button => {
      button.addEventListener('click', function () {
        const animeId = this.dataset.animeId;
        const voto = this.dataset.voto; // Positivo o negativo

        fetch(`/votes/${animeId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ voto })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire({
              title: '¡Voto registrado!',
              text: 'Tu voto ha sido registrado correctamente.',
              icon: 'success',
              confirmButtonText: 'OK'
            });
          } else {
            Swal.fire({
              title: 'Error',
              text: data.message,
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        })
        .catch(error => {
          Swal.fire({
            title: 'Error',
            text: 'Ocurrió un error al registrar tu voto.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        });
      });
    });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const voteButtons = document.querySelectorAll('.vote-button');

    voteButtons.forEach(button => {
      button.addEventListener('click', function () {
        const animeId = this.dataset.animeId;
        const voto = this.dataset.voto; // 'positivo' o 'negativo'

        fetch(`/votes/${animeId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({ voto })
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            /*
            const positiveButton = document.querySelector('.vote-button[data-voto="positivo"]');
            const negativeButton = document.querySelector('.vote-button[data-voto="negativo"]');

            if (voto === 'positivo') {
              positiveButton.textContent = 'Votado Positivo';
              negativeButton.textContent = 'Votar Negativo';
            } else {
              positiveButton.textContent = 'Votar Positivo';
              negativeButton.textContent = 'Votado Negativo';
            }
            */
            Swal.fire({
              title: '¡Voto registrado!',
              text: data.message,
              icon: 'success',
              confirmButtonText: 'OK'
            });
          } else {
            Swal.fire({
              title: 'Error',
              text: data.message,
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        })
        .catch(error => {
          Swal.fire({
            title: 'Error',
            text: 'Ocurrió un error al registrar tu voto.',
            icon: 'error',
            confirmButtonText: 'OK'
          });
        });
      });
    });
  });
</script>
-->

      <div class="comments-container">
        <h5>Comentarios</h5>
        <div class="comment-area">
          <img src="https://static.crunchyroll.com/assets/avatar/60x60/1043-jujutsu-kaisen-nobara-kugisaki.png"
            alt="user-photo">
          <textarea name="comentario" placeholder="Comparte tus ideas..."></textarea>
          <div class="comment-button">
            <button class="btn btn-danger">Comentario</button>
          </div>
        </div>
        <div class="comment-group">
          <div class="user-photo">
            <img src="https://static.crunchyroll.com/assets/avatar/170x170/1044-jujutsu-kaisen-satoru-gojo.png"
              alt="user-photo">
          </div>
          <div class="user-comment">
            <p>Usuario1</p>
            <p> 5⭐</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
            <div class="comment-actions">
              <i class="bi bi-reply"> Responder</i>
              <i class="bi bi-hand-thumbs-up"> +8.5k</i>
            </div>
          </div>
        </div>
        <div class="comment-group">
          <div class="user-photo">
            <img src="https://static.crunchyroll.com/assets/avatar/60x60/solo_sungjinwoo.png" alt="user-photo">
          </div>
          <div class="user-comment">
            <p>Usuario2</p>
            <p> 4.5⭐</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
            <div class="comment-actions">
              <i class="bi bi-reply"> Responder</i>
              <i class="bi bi-hand-thumbs-up"> +1.1k</i>
            </div>
          </div>
        </div>
        <div class="comment-group">
          <div class="user-photo">
            <img src="/images/donde-vive-el-buho.jpg" alt="user-photo">
          </div>
          <div class="user-comment">
            <p>Usuario3</p>
            <p> 5⭐</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
            <div class="comment-actions">
              <i class="bi bi-reply"> Responder</i>
              <i class="bi bi-hand-thumbs-up"> +4.2k</i>
            </div>
          </div>
        </div>
        <div class="comment-group">
          <div class="user-photo">
            <img src="/images/mikasa.jpg" alt="user-photo">
          </div>
          <div class="user-comment">
            <p>Usuario4</p>
            <p> 5⭐</p>
            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit.</p>
            <div class="comment-actions">
              <i class="bi bi-reply"> Responder</i>
              <span class="thumbs-up-container">
                <i class="bi bi-hand-thumbs-up"> +8.5k</i>
              </span>
            </div>
          </div>
        </div>
      </div>

    </div>
  </div>
</div>